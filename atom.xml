<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>黄同学的笔记小屋</title>
  
  <subtitle>web前端学习日志</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://lanxiangc2.github.io/"/>
  <updated>2020-08-09T09:04:31.886Z</updated>
  <id>http://lanxiangc2.github.io/</id>
  
  <author>
    <name>黄流川</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>字节跳动笔试题</title>
    <link href="http://lanxiangc2.github.io/2020/08/09/%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8%E7%AC%94%E8%AF%95%E9%A2%98/"/>
    <id>http://lanxiangc2.github.io/2020/08/09/字节跳动笔试题/</id>
    <published>2020-08-09T06:48:04.000Z</published>
    <updated>2020-08-09T09:04:31.886Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;今日头条优化推荐&quot;&gt;&lt;a href=&quot;#今日头条优化推荐&quot; class=&quot;headerlink&quot; title=&quot;今日头条优化推荐&quot;&gt;&lt;/a&gt;今日头条优化推荐&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;输入： 第1行为n代表用户的个数
        
      
    
    </summary>
    
      <category term="笔试" scheme="http://lanxiangc2.github.io/categories/%E7%AC%94%E8%AF%95/"/>
    
    
      <category term="字节跳动" scheme="http://lanxiangc2.github.io/tags/%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8/"/>
    
  </entry>
  
  <entry>
    <title>前端知识点总结——Vue(2)</title>
    <link href="http://lanxiangc2.github.io/2020/07/13/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93%E2%80%94%E2%80%94Vue-2/"/>
    <id>http://lanxiangc2.github.io/2020/07/13/前端知识点总结——Vue-2/</id>
    <published>2020-07-13T06:11:39.000Z</published>
    <updated>2020-07-13T06:13:27.084Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;Vue3-相比-vue2&quot;&gt;&lt;a href=&quot;#Vue3-相比-vue2&quot; class=&quot;headerlink&quot; title=&quot;Vue3 相比 vue2&quot;&gt;&lt;/a&gt;Vue3 相比 vue2&lt;/h2&gt;&lt;p&gt;Vue3
        
      
    
    </summary>
    
      <category term="前端知识点总结" scheme="http://lanxiangc2.github.io/categories/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="面经" scheme="http://lanxiangc2.github.io/tags/%E9%9D%A2%E7%BB%8F/"/>
    
      <category term="前端框架" scheme="http://lanxiangc2.github.io/tags/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/"/>
    
  </entry>
  
  <entry>
    <title>前端知识点总结——算法篇</title>
    <link href="http://lanxiangc2.github.io/2020/07/06/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93%E2%80%94%E2%80%94%E7%AE%97%E6%B3%95%E7%AF%87/"/>
    <id>http://lanxiangc2.github.io/2020/07/06/前端知识点总结——算法篇/</id>
    <published>2020-07-06T01:59:29.000Z</published>
    <updated>2020-07-10T12:24:18.438Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;前言&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;作为一名程序员，算法题肯定是必备的，但是前端而言的话，也不会太深入，笔者摘录了一些基本的题，作为平时的一些练习，避免面试过程中产生畏难心理，错失宝贵的面试机会。&lt;/p&gt;
    
    </summary>
    
    
      <category term="面试算法" scheme="http://lanxiangc2.github.io/tags/%E9%9D%A2%E8%AF%95%E7%AE%97%E6%B3%95/"/>
    
      <category term="前端" scheme="http://lanxiangc2.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>前端知识点总结——手撕代码篇</title>
    <link href="http://lanxiangc2.github.io/2020/07/06/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93%E2%80%94%E2%80%94%E6%89%8B%E6%92%95%E4%BB%A3%E7%A0%81%E7%AF%87/"/>
    <id>http://lanxiangc2.github.io/2020/07/06/前端知识点总结——手撕代码篇/</id>
    <published>2020-07-06T01:59:14.000Z</published>
    <updated>2020-08-14T16:55:15.115Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;前言&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在面试中面试官会让你手写一些代码，有算法题，有设计到对概念的理解，对一些方法的封装，所以平时对这方面的积累也是很重要的哦&lt;/p&gt;
    
    </summary>
    
      <category term="前端知识点总结" scheme="http://lanxiangc2.github.io/categories/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="手写代码" scheme="http://lanxiangc2.github.io/tags/%E6%89%8B%E5%86%99%E4%BB%A3%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>前端知识点总结——HR篇</title>
    <link href="http://lanxiangc2.github.io/2020/07/04/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93%E2%80%94%E2%80%94HR%E7%AF%87/"/>
    <id>http://lanxiangc2.github.io/2020/07/04/前端知识点总结——HR篇/</id>
    <published>2020-07-04T01:35:32.000Z</published>
    <updated>2020-07-04T02:15:56.312Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;你最大的缺点&quot;&gt;&lt;a href=&quot;#你最大的缺点&quot; class=&quot;headerlink&quot; title=&quot;你最大的缺点&quot;&gt;&lt;/a&gt;&lt;strong&gt;你最大的缺点&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;问题分析：&lt;/strong&gt;考察候选人的自我认知能力，个人优点是否符合岗位要求。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;参考建议：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;第一，不宜说自己没有缺点，只要是人就有缺点，这么说一定会令人反感。&lt;/p&gt;
&lt;p&gt;第二，年轻经验不足、缺乏磨炼、有些着急、对待效率低下的人缺乏耐心等&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;根据以上的关键点，缺点参考回复：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;首先，我刚毕业，经验方面不足，我会在工作中积极完成工作，积累各方面经验&lt;/p&gt;
&lt;p&gt;其次，性子急，对待效率低下的人缺乏耐心，但是我平时和别人聊天的时候会控制自己语速和讲话，慢慢培养自己耐心，避免浮躁。（&lt;strong&gt;遵循一个原则避重就轻&lt;/strong&gt;）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tips：&lt;/strong&gt;利用你的优点改正你的缺点，比如，工作追求细节极致，导致项目无法按时完成，通过时间管理，得以解决。一定不能说对应聘岗位的硬伤的缺点，以及无法弥补的缺点。&lt;/p&gt;
    
    </summary>
    
      <category term="前端知识点总结" scheme="http://lanxiangc2.github.io/categories/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="hr面试" scheme="http://lanxiangc2.github.io/tags/hr%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>vue作者尤雨溪的采访</title>
    <link href="http://lanxiangc2.github.io/2020/07/03/vue%E4%BD%9C%E8%80%85%E5%B0%A4%E9%9B%A8%E6%BA%AA%E7%9A%84%E9%87%87%E8%AE%BF/"/>
    <id>http://lanxiangc2.github.io/2020/07/03/vue作者尤雨溪的采访/</id>
    <published>2020-07-03T01:57:25.000Z</published>
    <updated>2020-07-06T01:28:21.050Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;谈一谈你的第一次编程经历？&quot;&gt;&lt;a href=&quot;#谈一谈你的第一次编程经历？&quot; class=&quot;headerlink&quot; title=&quot;谈一谈你的第一次编程经历？&quot;&gt;&lt;/a&gt;谈一谈你的第一次编程经历？&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;「JavaScript 很吸引我，因为它能够快速构建一些东西并分享给别人。把它放在网上，通过一个网址，任何有浏览器的人都可以看到。这就是吸引我开始 Web 开发和 JavaScript 编程的原因。」&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;当我在美国上大学的时候，老实说，我不知道我想要做什么，而且我的专业是室内艺术和艺术史。当我快毕业时，我感觉很难找到和专业相关的工作。&lt;/p&gt;
&lt;p&gt;我盘算着或许我可以去一个适合我的硕士课程，学习更多的技能。我去了 Parsons，读了一个美术设计和技术的硕士。这是一个非常好的专业，因为每个人都是既学习设计也学习编程。他们会教一些比如 openFrameworks，处理，动画算法之类的课程，而且你也必须写应用程序和交互界面。&lt;/p&gt;
&lt;p&gt;Parsons 没有真正涉及很多的 JavaScript，但是 JavaScript 很吸引我，因为它能够快速构建一些东西并分享给别人。把它放在网上，通过一个网址，任何有浏览器的人都可以看到。这就是吸引我开始 Web 开发和 JavaScript 编程的原因。&lt;/p&gt;
&lt;p&gt;当时 &lt;a href=&quot;https://www.chromeexperiments.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Chrome experiments&lt;/a&gt; 这个网站刚刚发布，我深深的被震撼了。我立即开始学习 JavaScript，并开始开发类似 Chrome experiments 的项目。我把这些项目放在我的简历上，然后被 Google 创意实验室的招聘人员注意到了。我加入了&lt;a href=&quot;https://www.creativelab5.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Five program&lt;/a&gt;。每年创意实验室会招五名应届毕业生，组成一个小组，一个人写文案，一个人搞技术，一个人做平面设计，一个人统筹安排和一个打杂的。&lt;/p&gt;
    
    </summary>
    
      <category term="web前端" scheme="http://lanxiangc2.github.io/categories/web%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="Vue作者" scheme="http://lanxiangc2.github.io/tags/Vue%E4%BD%9C%E8%80%85/"/>
    
      <category term="尤雨溪" scheme="http://lanxiangc2.github.io/tags/%E5%B0%A4%E9%9B%A8%E6%BA%AA/"/>
    
  </entry>
  
  <entry>
    <title>字节跳动提前批面经</title>
    <link href="http://lanxiangc2.github.io/2020/07/02/%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8%E6%8F%90%E5%89%8D%E6%89%B9%E9%9D%A2%E7%BB%8F/"/>
    <id>http://lanxiangc2.github.io/2020/07/02/字节跳动提前批面经/</id>
    <published>2020-07-02T07:02:41.000Z</published>
    <updated>2020-07-13T06:49:54.281Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一面&quot;&gt;&lt;a href=&quot;#一面&quot; class=&quot;headerlink&quot; title=&quot;一面&quot;&gt;&lt;/a&gt;一面&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;和腾讯公司出题很大的不同，也可能是秋招提前批的原因&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;手写ES6的class继承&quot;&gt;&lt;a href=&quot;#手写ES6的class继承&quot; class=&quot;headerlink&quot; title=&quot;手写ES6的class继承&quot;&gt;&lt;/a&gt;手写ES6的class继承&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;继承在前端逻辑操作中是比较常见的，今天我们就从零开始写一个js的继承方式&lt;/p&gt;
&lt;p&gt;在&lt;strong&gt;es5&lt;/strong&gt;中继承实质上是先创建子类的实例对象，然后再将父类的方法添加到this上&lt;strong&gt;Parent.call(this)&lt;/strong&gt;，在&lt;strong&gt;es6&lt;/strong&gt;中则是先创建父类的实例对象this调用父类的&lt;strong&gt;super()&lt;/strong&gt;，然后再用子类的构造函数修改this&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="面经" scheme="http://lanxiangc2.github.io/categories/%E9%9D%A2%E7%BB%8F/"/>
    
    
      <category term="字节跳动" scheme="http://lanxiangc2.github.io/tags/%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8/"/>
    
  </entry>
  
  <entry>
    <title>前端知识点总结——JavaScript(4)</title>
    <link href="http://lanxiangc2.github.io/2020/07/01/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93%E2%80%94%E2%80%94JavaScript-4/"/>
    <id>http://lanxiangc2.github.io/2020/07/01/前端知识点总结——JavaScript-4/</id>
    <published>2020-07-01T13:58:23.000Z</published>
    <updated>2020-07-13T06:26:11.546Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;ajax和axios、fetch的区别&quot;&gt;&lt;a href=&quot;#ajax和axios、fetch的区别&quot; class=&quot;headerlink&quot; title=&quot;ajax和axios、fetch的区别&quot;&gt;&lt;/a&gt;ajax和axios、fetch的区别&lt;/h3&gt;&lt;h4 id=&quot;ajax&quot;&gt;&lt;a href=&quot;#ajax&quot; class=&quot;headerlink&quot; title=&quot;ajax&quot;&gt;&lt;/a&gt;ajax&lt;/h4&gt;&lt;p&gt;传统 Ajax 指的是 XMLHttpRequest（XHR）， 最早出现的发送后端请求技术，隶属于原始js中，核心使用XMLHttpRequest对象，多个请求之间如果有先后关系的话，就会出现&lt;strong&gt;回调地狱&lt;/strong&gt;。&lt;/p&gt;
&lt;h4 id=&quot;fetch&quot;&gt;&lt;a href=&quot;#fetch&quot; class=&quot;headerlink&quot; title=&quot;fetch&quot;&gt;&lt;/a&gt;fetch&lt;/h4&gt;&lt;p&gt;fetch是一个低层次的API，你可以把它考虑成原生的XHR，所以使用起来并不是那么舒服，需要进行封装。&lt;/p&gt;
&lt;p&gt;fetch号称是AJAX的替代品，是在ES6出现的，使用了ES6中的promise对象。Fetch是基于promise设计的。Fetch的代码结构比起ajax简单多了，参数有点像jQuery ajax。但是，一定记住&lt;strong&gt;fetch不是ajax的进一步封装，而是原生js，没有使用XMLHttpRequest对象&lt;/strong&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="前端知识点总结" scheme="http://lanxiangc2.github.io/categories/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="JavaScript" scheme="http://lanxiangc2.github.io/tags/JavaScript/"/>
    
      <category term="面经" scheme="http://lanxiangc2.github.io/tags/%E9%9D%A2%E7%BB%8F/"/>
    
  </entry>
  
  <entry>
    <title>中移物联网一面面经</title>
    <link href="http://lanxiangc2.github.io/2020/06/30/%E4%B8%AD%E7%A7%BB%E7%89%A9%E8%81%94%E7%BD%91%E4%B8%80%E9%9D%A2%E9%9D%A2%E7%BB%8F/"/>
    <id>http://lanxiangc2.github.io/2020/06/30/中移物联网一面面经/</id>
    <published>2020-06-30T09:08:13.000Z</published>
    <updated>2020-07-02T12:29:36.951Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h3 id=&quot;js闭包&quot;&gt;&lt;a href=&quot;#js闭包&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
      <category term="面经" scheme="http://lanxiangc2.github.io/categories/%E9%9D%A2%E7%BB%8F/"/>
    
    
      <category term="中移物联网面试" scheme="http://lanxiangc2.github.io/tags/%E4%B8%AD%E7%A7%BB%E7%89%A9%E8%81%94%E7%BD%91%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>腾讯暑期实习面经</title>
    <link href="http://lanxiangc2.github.io/2020/06/29/%E8%85%BE%E8%AE%AF%E6%9A%91%E6%9C%9F%E5%AE%9E%E4%B9%A0%E9%9D%A2%E7%BB%8F/"/>
    <id>http://lanxiangc2.github.io/2020/06/29/腾讯暑期实习面经/</id>
    <published>2020-06-29T12:46:04.000Z</published>
    <updated>2020-07-04T01:42:56.296Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;简单介绍下面试的部门吧&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt; 我们隶属腾讯PCG事业群研发部，负责部门内的研发效能提升，做内部自动化及持续交付的工具建设&lt;/p&gt;
&lt;p&gt;岗位职责：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;负责架构、代码层面的专项分析及优化，包括但不限于自动化测试框架开发、可测性分析解决等；&lt;/li&gt;
&lt;li&gt;参与研发部DevOps工具链和平台的建设工作，参与新工具/平台系统的需求分析、架构设计、核心框架及组件的编码等开发工作  &lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;一面&quot;&gt;&lt;a href=&quot;#一面&quot; class=&quot;headerlink&quot; title=&quot;一面&quot;&gt;&lt;/a&gt;一面&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;小引&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;面试官问了我问什么网站和博客这些都是用的&lt;code&gt;lanxiangc2&lt;/code&gt;，我说这是我的网名&lt;code&gt;兰香川川&lt;/code&gt;，他以为我和那个蓝翔有啥关系，O(∩_∩)O哈哈~，被面试官关注到了我的个人网站和作品 真的超开心，努力没白费，继续加油哦~&lt;/p&gt;
    
    </summary>
    
      <category term="面经" scheme="http://lanxiangc2.github.io/categories/%E9%9D%A2%E7%BB%8F/"/>
    
    
      <category term="腾讯面试" scheme="http://lanxiangc2.github.io/tags/%E8%85%BE%E8%AE%AF%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>前端知识点总结——JavaScript(3)</title>
    <link href="http://lanxiangc2.github.io/2020/06/25/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93%E2%80%94%E2%80%94JavaScript-3/"/>
    <id>http://lanxiangc2.github.io/2020/06/25/前端知识点总结——JavaScript-3/</id>
    <published>2020-06-25T09:01:36.000Z</published>
    <updated>2020-07-01T12:32:54.485Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;js判断类型&quot;&gt;&lt;a href=&quot;#js判断类型&quot; class=&quot;headerlink&quot; title=&quot;js判断类型&quot;&gt;&lt;/a&gt;js判断类型&lt;/h3&gt;&lt;p&gt;判断方法：typeof()，instanceof，Object.prototype.toString.call()等。&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;JavaScript&lt;/code&gt;里使用&lt;code&gt;typeof&lt;/code&gt;判断数据类型，只能区分&lt;strong&gt;基本类型&lt;/strong&gt;，即：&lt;code&gt;number&lt;/code&gt;、&lt;code&gt;string&lt;/code&gt;、&lt;code&gt;undefined&lt;/code&gt;、&lt;code&gt;boolean&lt;/code&gt;、&lt;code&gt;object&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;对于&lt;code&gt;null&lt;/code&gt;、&lt;code&gt;array&lt;/code&gt;、&lt;code&gt;function&lt;/code&gt;、&lt;code&gt;object&lt;/code&gt;来说，使用&lt;code&gt;typeof&lt;/code&gt;都会统一返回&lt;code&gt;object&lt;/code&gt;字符串。&lt;/p&gt;
&lt;p&gt;要想区分对象、数组、函数、单纯使用&lt;code&gt;typeof&lt;/code&gt;是不行的。在JS中，可以通过&lt;code&gt;Object.prototype.toString&lt;/code&gt;方法，判断某个对象之属于哪种内置类型。&lt;br&gt;分为&lt;code&gt;null&lt;/code&gt;、&lt;code&gt;string&lt;/code&gt;、&lt;code&gt;boolean&lt;/code&gt;、&lt;code&gt;number&lt;/code&gt;、&lt;code&gt;undefined&lt;/code&gt;、&lt;code&gt;array&lt;/code&gt;、&lt;code&gt;function&lt;/code&gt;、&lt;code&gt;object&lt;/code&gt;、&lt;code&gt;date&lt;/code&gt;、&lt;code&gt;math&lt;/code&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="前端知识点总结" scheme="http://lanxiangc2.github.io/categories/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="JavaScript" scheme="http://lanxiangc2.github.io/tags/JavaScript/"/>
    
      <category term="面经" scheme="http://lanxiangc2.github.io/tags/%E9%9D%A2%E7%BB%8F/"/>
    
  </entry>
  
  <entry>
    <title>前端知识点总结——JavaScript(2)</title>
    <link href="http://lanxiangc2.github.io/2020/06/18/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93%E2%80%94%E2%80%94JavaScript-2/"/>
    <id>http://lanxiangc2.github.io/2020/06/18/前端知识点总结——JavaScript-2/</id>
    <published>2020-06-18T06:16:41.000Z</published>
    <updated>2020-07-10T11:05:01.536Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;原型链-spades-spades-spades&quot;&gt;&lt;a href=&quot;#原型链-spades-spades-spades&quot; class=&quot;headerlink&quot; title=&quot;原型链    &amp;spades;&amp;spades;&amp;spades;&quot;&gt;&lt;/a&gt;原型链    &amp;spades;&amp;spades;&amp;spades;&lt;/h3&gt;&lt;p&gt;见纸质版笔记&lt;/p&gt;
&lt;h3 id=&quot;this-spades-spades-spades&quot;&gt;&lt;a href=&quot;#this-spades-spades-spades&quot; class=&quot;headerlink&quot; title=&quot;this  &amp;spades;&amp;spades;&amp;spades;&quot;&gt;&lt;/a&gt;this  &amp;spades;&amp;spades;&amp;spades;&lt;/h3&gt;&lt;p&gt;this是JavaScript的一个关键字，随着函数使用场合的不同，this的值会发生变化。但是有一个原则，即this指向的是调用函数的那个对象。this是全局对象Global，可以作为方法调用&lt;/p&gt;
&lt;h4 id=&quot;this作为构造函数执行&quot;&gt;&lt;a href=&quot;#this作为构造函数执行&quot; class=&quot;headerlink&quot; title=&quot;this作为构造函数执行&quot;&gt;&lt;/a&gt;this作为构造函数执行&lt;/h4&gt;&lt;p&gt;this 指向创建出来的实例&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; name = &lt;span class=&quot;string&quot;&gt;&#39;zl&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;test&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name = &lt;span class=&quot;string&quot;&gt;&#39;hlc&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; o = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; test();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//可以看出o代表的不是全局对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;this作为对象方法（属性）执行&quot;&gt;&lt;a href=&quot;#this作为对象方法（属性）执行&quot; class=&quot;headerlink&quot; title=&quot;this作为对象方法（属性）执行&quot;&gt;&lt;/a&gt;this作为对象方法（属性）执行&lt;/h4&gt;&lt;p&gt;this 指代上级对象 / 指向调用该方法的对象&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; x =&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;test&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　　alert(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.x);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; o = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  x:&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  m:test &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;o.m(); &lt;span class=&quot;comment&quot;&gt;// 1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;作为普通函数执行&quot;&gt;&lt;a href=&quot;#作为普通函数执行&quot; class=&quot;headerlink&quot; title=&quot;作为普通函数执行&quot;&gt;&lt;/a&gt;作为普通函数执行&lt;/h4&gt;&lt;p&gt;this 指代全局对象&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;test&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.x = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;  &lt;span class=&quot;comment&quot;&gt;//这里this就是window&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.x);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;test(); &lt;span class=&quot;comment&quot;&gt;// 1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;call、apply、bind&quot;&gt;&lt;a href=&quot;#call、apply、bind&quot; class=&quot;headerlink&quot; title=&quot;call、apply、bind&quot;&gt;&lt;/a&gt;call、apply、bind&lt;/h4&gt;&lt;p&gt;this指代上下文对象  / 同时也是改变this指向的方法&lt;/p&gt;
&lt;h4 id=&quot;关于this的理解&quot;&gt;&lt;a href=&quot;#关于this的理解&quot; class=&quot;headerlink&quot; title=&quot;关于this的理解&quot;&gt;&lt;/a&gt;关于this的理解&lt;/h4&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; account = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    phone: &lt;span class=&quot;string&quot;&gt;&quot;1234567&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    getPhone: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.phone;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; mycount = account.getPhone;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(account.getPhone()); &lt;span class=&quot;comment&quot;&gt;// 1234567&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(mycount()); &lt;span class=&quot;comment&quot;&gt;// undefined&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;解析&lt;/strong&gt;&lt;br&gt;this的指向是看调用时的对象，第一个是account调用，所以this指向account，account中有getPhone这个方法&lt;br&gt;第二个是mycount调用，它是account.getPhone的实例对象，继承了getPhone这个方法，mycount是挂载在window上的，所以this指向window&lt;/p&gt;
&lt;h4 id=&quot;其他&quot;&gt;&lt;a href=&quot;#其他&quot; class=&quot;headerlink&quot; title=&quot;其他&quot;&gt;&lt;/a&gt;其他&lt;/h4&gt;&lt;p&gt;在JavaScript中，this指针是在创建时，由系统默认生成的两个隐式参数之一（另一个是arguments）。&lt;/p&gt;
&lt;p&gt;this指针指向与该函数调用进行隐式关联的一个对象，该对象被称为“函数上下文”。&lt;/p&gt;
&lt;p&gt;this的几种指向：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过事件调用，this-&amp;gt;事件&lt;/li&gt;
&lt;li&gt;自调用函数，this-&amp;gt;window&lt;/li&gt;
&lt;li&gt;构造函数中，this-&amp;gt;new出来的对象&lt;/li&gt;
&lt;li&gt;箭头函数，this-&amp;gt;创建函数时指向的对象&lt;/li&gt;
&lt;li&gt;call和apply，this-&amp;gt;call和apply第一个参数&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="前端知识点总结" scheme="http://lanxiangc2.github.io/categories/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="JavaScript" scheme="http://lanxiangc2.github.io/tags/JavaScript/"/>
    
      <category term="面经" scheme="http://lanxiangc2.github.io/tags/%E9%9D%A2%E7%BB%8F/"/>
    
  </entry>
  
  <entry>
    <title>小程序开发</title>
    <link href="http://lanxiangc2.github.io/2020/06/14/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/"/>
    <id>http://lanxiangc2.github.io/2020/06/14/小程序开发/</id>
    <published>2020-06-14T01:47:56.000Z</published>
    <updated>2020-06-14T02:39:25.162Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;blockquote&gt;
&lt;p&gt;开发文档&lt;a href=&quot;https://developers.weixin.qq.com/miniprogram/dev/framework/&quot; target=&quot;_blank&quot;
        
      
    
    </summary>
    
      <category term="web前端技术学习" scheme="http://lanxiangc2.github.io/categories/web%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="前端" scheme="http://lanxiangc2.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>前端知识点总结——webapp和小程序</title>
    <link href="http://lanxiangc2.github.io/2020/06/13/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93%E2%80%94%E2%80%94webapp%E5%92%8C%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    <id>http://lanxiangc2.github.io/2020/06/13/前端知识点总结——webapp和小程序/</id>
    <published>2020-06-13T13:22:40.000Z</published>
    <updated>2020-06-14T02:41:24.666Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;移动端布局&quot;&gt;&lt;a href=&quot;#移动端布局&quot; class=&quot;headerlink&quot; title=&quot;移动端布局&quot;&gt;&lt;/a&gt;移动端布局&lt;/h3&gt;&lt;h4 id=&quot;固定布局&quot;&gt;&lt;a href=&quot;#固定布局&quot; class=&quot;headerlink&quot; title=&quot;固定布局&quot;&gt;&lt;/a&gt;固定布局&lt;/h4&gt;&lt;p&gt;固定布局是第一次做移动端时最好的选择方式,思路沿用PC端,上手比较快。在标签里把 viewport 加好,然后设想整个网页的宽度为 320px 即可。 其他地方根据 PC 端来布局。 &lt;/p&gt;
&lt;p&gt;缺点:大屏手机显示网页比较宽,固定布局宽度参照永远是 320px,导致左右两 边会有空白。&lt;/p&gt;
&lt;h4 id=&quot;流动布局&quot;&gt;&lt;a href=&quot;#流动布局&quot; class=&quot;headerlink&quot; title=&quot;流动布局&quot;&gt;&lt;/a&gt;流动布局&lt;/h4&gt;&lt;p&gt;流动布局与固定宽度布局基本不同点就在于对网站尺寸的测量单位不同，流动布局就是使用&lt;strong&gt;百分比&lt;/strong&gt;来代替px作为单位。 优点是流动布局可以很好解决自适应需求。缺点是不够灵活，添加元素时，需要更改其他元素的值。&lt;/p&gt;
    
    </summary>
    
      <category term="前端知识点总结" scheme="http://lanxiangc2.github.io/categories/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="响应式布局" scheme="http://lanxiangc2.github.io/tags/%E5%93%8D%E5%BA%94%E5%BC%8F%E5%B8%83%E5%B1%80/"/>
    
      <category term="小程序" scheme="http://lanxiangc2.github.io/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
      <category term="webapp" scheme="http://lanxiangc2.github.io/tags/webapp/"/>
    
  </entry>
  
  <entry>
    <title>前端知识点总结——AJAX和JSON</title>
    <link href="http://lanxiangc2.github.io/2020/06/13/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93%E2%80%94%E2%80%94AJAX%E5%92%8CJSON/"/>
    <id>http://lanxiangc2.github.io/2020/06/13/前端知识点总结——AJAX和JSON/</id>
    <published>2020-06-13T12:32:57.000Z</published>
    <updated>2020-07-10T12:03:58.627Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Ajax的流程&quot;&gt;&lt;a href=&quot;#Ajax的流程&quot; class=&quot;headerlink&quot; title=&quot;Ajax的流程&quot;&gt;&lt;/a&gt;Ajax的流程&lt;/h3&gt;&lt;p&gt;Ajax通过XMLHttpRequest对象实现异步方式在后台发送发送请求。&lt;/p&gt;
&lt;p&gt;主要有以下四个步骤：&lt;/p&gt;
&lt;p&gt;（1）初始化XMLHttpRequest对象。不同浏览器的差异，需要我们创建一个跨浏览器的对象，并判断XMLHttpRequest对象创建是否成功，如果不成功，则给予提示。&lt;/p&gt;
&lt;p&gt;（2）为XMLHttpRequest对象指定一个回调函数，用于对后台返回结果进行处理。&lt;/p&gt;
&lt;p&gt;（3）创建一个与服务器的连接，在创建时，需要指定发送请求的方式（GET/POST），以及设置是否采用异步方式发送请求。&lt;/p&gt;
&lt;p&gt;（4）向服务器发送请求。&lt;/p&gt;
    
    </summary>
    
      <category term="前端知识点总结" scheme="http://lanxiangc2.github.io/categories/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="AJAX" scheme="http://lanxiangc2.github.io/tags/AJAX/"/>
    
  </entry>
  
  <entry>
    <title>前端知识点总结——正则表达式</title>
    <link href="http://lanxiangc2.github.io/2020/06/13/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93%E2%80%94%E2%80%94%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>http://lanxiangc2.github.io/2020/06/13/前端知识点总结——正则表达式/</id>
    <published>2020-06-13T11:34:31.000Z</published>
    <updated>2020-06-13T14:27:00.386Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;正则表达式中-和-和-的理解&quot;&gt;&lt;a href=&quot;#正则表达式中-和-和-的理解&quot; class=&quot;headerlink&quot; title=&quot;正则表达式中?=和?:和?!的理解&quot;&gt;&lt;/a&gt;正则表达式中?=和?:和?!的理解&lt;/h3&gt;&lt;p&gt;要理解?=和?!，首先需要理解前瞻，后顾，负前瞻，负后顾四个概念：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 前瞻：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;exp1(?=exp2) 查找exp2前面的exp1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 后顾：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(?&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;=exp2)exp1&lt;/span&gt; 查找&lt;span class=&quot;attr&quot;&gt;exp2&lt;/span&gt;后面的&lt;span class=&quot;attr&quot;&gt;exp1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;xml&quot;&gt;// 负前瞻：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;xml&quot;&gt;exp1(?!exp2) 查找后面不是exp2的exp1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;xml&quot;&gt;// 负后顾：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;xml&quot;&gt;(?&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;!exp2)exp1&lt;/span&gt; 查找前面不是&lt;span class=&quot;attr&quot;&gt;exp2&lt;/span&gt;的&lt;span class=&quot;attr&quot;&gt;exp1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;要理解?:则需要理解捕获分组和非捕获分组的概念：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;()表示捕获分组，()会把每个分组里的匹配的值保存起来，使用$n(n是一个数字，表示第n个捕获组的内容)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(?:)表示非捕获分组，和捕获分组唯一的区别在于，非捕获分组匹配的值不会保存起来&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="前端知识点总结" scheme="http://lanxiangc2.github.io/categories/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="正则表达式" scheme="http://lanxiangc2.github.io/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>前端知识点总结——CSS</title>
    <link href="http://lanxiangc2.github.io/2020/06/13/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93%E2%80%94%E2%80%94CSS/"/>
    <id>http://lanxiangc2.github.io/2020/06/13/前端知识点总结——CSS/</id>
    <published>2020-06-13T08:33:00.000Z</published>
    <updated>2020-07-13T06:15:28.958Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;CSS的盒模型-怎么切换&quot;&gt;&lt;a href=&quot;#CSS的盒模型-怎么切换&quot; class=&quot;headerlink&quot; title=&quot;CSS的盒模型 怎么切换&quot;&gt;&lt;/a&gt;CSS的盒模型 怎么切换&lt;/h3&gt;&lt;p&gt;&lt;code&gt;box-sizing:content-box&lt;/code&gt;这是W3C盒模型， width = content&lt;/p&gt;
&lt;p&gt;&lt;code&gt;box-sizing:border-box&lt;/code&gt;这是width = border + padding + content&lt;/p&gt;
    
    </summary>
    
      <category term="前端知识点总结" scheme="http://lanxiangc2.github.io/categories/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="CSS" scheme="http://lanxiangc2.github.io/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>前端知识点总结——HTML</title>
    <link href="http://lanxiangc2.github.io/2020/06/13/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93%E2%80%94%E2%80%94HTML/"/>
    <id>http://lanxiangc2.github.io/2020/06/13/前端知识点总结——HTML/</id>
    <published>2020-06-13T07:27:55.000Z</published>
    <updated>2020-07-09T08:38:58.173Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;canvas的一些方法&quot;&gt;&lt;a href=&quot;#canvas的一些方法&quot; class=&quot;headerlink&quot; title=&quot;canvas的一些方法&quot;&gt;&lt;/a&gt;canvas的一些方法&lt;/h3&gt;&lt;h3 id=&quot;requestAnimationFrame有用过吗？知道是干什么的吗？&quot;&gt;&lt;a href=&quot;#requestAnimationFrame有用过吗？知道是干什么的吗？&quot; class=&quot;headerlink&quot; title=&quot;requestAnimationFrame有用过吗？知道是干什么的吗？&quot;&gt;&lt;/a&gt;requestAnimationFrame有用过吗？知道是干什么的吗？&lt;/h3&gt;&lt;p&gt;&lt;u&gt;实现动画效果的方法比较多&lt;/u&gt;，Javascript 中可以通过定时器 setTimeout 来实现，css3 可以使用 transition 和 animation 来实现，html5 中的 canvas 也可以实现。除此之外，html5 还提供一个专门用于请求动画的API，那就是 requestAnimationFrame，顾名思义就是&lt;strong&gt;请求动画帧。&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="前端知识点总结" scheme="http://lanxiangc2.github.io/categories/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="HTML" scheme="http://lanxiangc2.github.io/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>前端知识点总结——前端工程化</title>
    <link href="http://lanxiangc2.github.io/2020/06/13/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93%E2%80%94%E2%80%94%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96/"/>
    <id>http://lanxiangc2.github.io/2020/06/13/前端知识点总结——前端工程化/</id>
    <published>2020-06-13T05:36:24.000Z</published>
    <updated>2020-07-01T14:27:51.081Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;loader的运行原理和作用&quot;&gt;&lt;a href=&quot;#loader的运行原理和作用&quot; class=&quot;headerlink&quot; title=&quot;loader的运行原理和作用&quot;&gt;&lt;/a&gt;loader的运行原理和作用&lt;/h3&gt;&lt;h4 id=&quot;具体作用如下：&quot;&gt;&lt;a href=&quot;#具体作用如下：&quot; class=&quot;headerlink&quot; title=&quot;具体作用如下：&quot;&gt;&lt;/a&gt;具体作用如下：&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;实现对不同格式文件的处理，比如将Scss转化为CSS，或将TypeScript转化为JavaScript。&lt;/li&gt;
&lt;li&gt;可以编译文件，从而使其能够添加到依赖关系中。loader是WebPack最重要的部分之一。通过使用不同的loader,我们能够调用外部的脚本或者工具，实现对不同格式文件的处理。loader需要在webpack.config.js文件里单独用module进行设置。&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="前端知识点总结" scheme="http://lanxiangc2.github.io/categories/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="前端工程化" scheme="http://lanxiangc2.github.io/tags/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>关于slice和concat深浅拷贝的问题</title>
    <link href="http://lanxiangc2.github.io/2020/06/12/%E5%85%B3%E4%BA%8Eslice%E5%92%8Cconcat%E6%B7%B1%E6%B5%85%E6%8B%B7%E8%B4%9D%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://lanxiangc2.github.io/2020/06/12/关于slice和concat深浅拷贝的问题/</id>
    <published>2020-06-12T05:50:44.000Z</published>
    <updated>2020-06-12T05:58:46.152Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h3 id=&quot;使用slice-进行深拷贝&quot;&gt;&lt;a href=&quot;#使用slice-进行深拷贝&quot; class=&quot;headerlink&quot; title=&quot;使用slice()进行深拷贝&quot;&gt;&lt;/a&gt;使用slice()进行深拷贝&lt;/h3&gt;&lt;figure class=&quot;highlight
        
      
    
    </summary>
    
      <category term="前端知识点总结" scheme="http://lanxiangc2.github.io/categories/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="JavaScript" scheme="http://lanxiangc2.github.io/tags/JavaScript/"/>
    
  </entry>
  
</feed>

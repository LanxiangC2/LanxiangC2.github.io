<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>黄同学的笔记小屋</title>
  
  <subtitle>web前端学习日志</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://lanxiangc2.github.io/"/>
  <updated>2020-06-18T12:04:12.310Z</updated>
  <id>http://lanxiangc2.github.io/</id>
  
  <author>
    <name>黄流川</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>前端知识点总结——JavaScript(2)</title>
    <link href="http://lanxiangc2.github.io/2020/06/18/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93%E2%80%94%E2%80%94JavaScript-2/"/>
    <id>http://lanxiangc2.github.io/2020/06/18/前端知识点总结——JavaScript-2/</id>
    <published>2020-06-18T06:16:41.000Z</published>
    <updated>2020-06-18T12:04:12.310Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h3 id=&quot;原型链-spades-spades-spades&quot;&gt;&lt;a href=&quot;#原型链-spades-spades-spades&quot; class=&quot;headerlink&quot; title=&quot;原型链    &amp;spades;&amp;spades;&amp;spades;&quot;&gt;&lt;/a&gt;原型链   
        
      
    
    </summary>
    
      <category term="前端知识点总结" scheme="http://lanxiangc2.github.io/categories/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="JavaScript" scheme="http://lanxiangc2.github.io/tags/JavaScript/"/>
    
      <category term="面经" scheme="http://lanxiangc2.github.io/tags/%E9%9D%A2%E7%BB%8F/"/>
    
  </entry>
  
  <entry>
    <title>小程序开发</title>
    <link href="http://lanxiangc2.github.io/2020/06/14/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/"/>
    <id>http://lanxiangc2.github.io/2020/06/14/小程序开发/</id>
    <published>2020-06-14T01:47:56.000Z</published>
    <updated>2020-06-14T02:39:25.162Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;blockquote&gt;
&lt;p&gt;开发文档&lt;a href=&quot;https://developers.weixin.qq.com/miniprogram/dev/framework/&quot; target=&quot;_blank&quot;
        
      
    
    </summary>
    
      <category term="web前端技术学习" scheme="http://lanxiangc2.github.io/categories/web%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="前端" scheme="http://lanxiangc2.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>前端知识点总结——webapp和小程序</title>
    <link href="http://lanxiangc2.github.io/2020/06/13/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93%E2%80%94%E2%80%94webapp%E5%92%8C%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    <id>http://lanxiangc2.github.io/2020/06/13/前端知识点总结——webapp和小程序/</id>
    <published>2020-06-13T13:22:40.000Z</published>
    <updated>2020-06-14T02:41:24.666Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;移动端布局&quot;&gt;&lt;a href=&quot;#移动端布局&quot; class=&quot;headerlink&quot; title=&quot;移动端布局&quot;&gt;&lt;/a&gt;移动端布局&lt;/h3&gt;&lt;h4 id=&quot;固定布局&quot;&gt;&lt;a href=&quot;#固定布局&quot; class=&quot;headerlink&quot; title=&quot;固定布局&quot;&gt;&lt;/a&gt;固定布局&lt;/h4&gt;&lt;p&gt;固定布局是第一次做移动端时最好的选择方式,思路沿用PC端,上手比较快。在标签里把 viewport 加好,然后设想整个网页的宽度为 320px 即可。 其他地方根据 PC 端来布局。 &lt;/p&gt;
&lt;p&gt;缺点:大屏手机显示网页比较宽,固定布局宽度参照永远是 320px,导致左右两 边会有空白。&lt;/p&gt;
&lt;h4 id=&quot;流动布局&quot;&gt;&lt;a href=&quot;#流动布局&quot; class=&quot;headerlink&quot; title=&quot;流动布局&quot;&gt;&lt;/a&gt;流动布局&lt;/h4&gt;&lt;p&gt;流动布局与固定宽度布局基本不同点就在于对网站尺寸的测量单位不同，流动布局就是使用&lt;strong&gt;百分比&lt;/strong&gt;来代替px作为单位。 优点是流动布局可以很好解决自适应需求。缺点是不够灵活，添加元素时，需要更改其他元素的值。&lt;/p&gt;
    
    </summary>
    
      <category term="前端知识点总结" scheme="http://lanxiangc2.github.io/categories/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="响应式布局" scheme="http://lanxiangc2.github.io/tags/%E5%93%8D%E5%BA%94%E5%BC%8F%E5%B8%83%E5%B1%80/"/>
    
      <category term="小程序" scheme="http://lanxiangc2.github.io/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
      <category term="webapp" scheme="http://lanxiangc2.github.io/tags/webapp/"/>
    
  </entry>
  
  <entry>
    <title>前端知识点总结——AJAX和JSON</title>
    <link href="http://lanxiangc2.github.io/2020/06/13/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93%E2%80%94%E2%80%94AJAX%E5%92%8CJSON/"/>
    <id>http://lanxiangc2.github.io/2020/06/13/前端知识点总结——AJAX和JSON/</id>
    <published>2020-06-13T12:32:57.000Z</published>
    <updated>2020-06-18T06:36:01.140Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Ajax的流程&quot;&gt;&lt;a href=&quot;#Ajax的流程&quot; class=&quot;headerlink&quot; title=&quot;Ajax的流程&quot;&gt;&lt;/a&gt;Ajax的流程&lt;/h3&gt;&lt;p&gt;Ajax通过XMLHttpRequest对象实现异步方式在后台发送发送请求。&lt;/p&gt;
&lt;p&gt;主要有以下四个步骤：&lt;/p&gt;
&lt;p&gt;（1）初始化XMLHttpRequest对象。不同浏览器的差异，需要我们创建一个跨浏览器的对象，并判断XMLHttpRequest对象创建是否成功，如果不成功，则给予提示。&lt;/p&gt;
&lt;p&gt;（2）为XMLHttpRequest对象指定一个回调函数，用于对后台返回结果进行处理。&lt;/p&gt;
&lt;p&gt;（3）创建一个与服务器的连接，在创建时，需要指定发送请求的方式（GET/POST），以及设置是否采用异步方式发送请求。&lt;/p&gt;
&lt;p&gt;（4）向服务器发送请求。&lt;/p&gt;
    
    </summary>
    
      <category term="前端知识点总结" scheme="http://lanxiangc2.github.io/categories/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="AJAX" scheme="http://lanxiangc2.github.io/tags/AJAX/"/>
    
  </entry>
  
  <entry>
    <title>前端知识点总结——正则表达式</title>
    <link href="http://lanxiangc2.github.io/2020/06/13/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93%E2%80%94%E2%80%94%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>http://lanxiangc2.github.io/2020/06/13/前端知识点总结——正则表达式/</id>
    <published>2020-06-13T11:34:31.000Z</published>
    <updated>2020-06-13T14:27:00.386Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;正则表达式中-和-和-的理解&quot;&gt;&lt;a href=&quot;#正则表达式中-和-和-的理解&quot; class=&quot;headerlink&quot; title=&quot;正则表达式中?=和?:和?!的理解&quot;&gt;&lt;/a&gt;正则表达式中?=和?:和?!的理解&lt;/h3&gt;&lt;p&gt;要理解?=和?!，首先需要理解前瞻，后顾，负前瞻，负后顾四个概念：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 前瞻：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;exp1(?=exp2) 查找exp2前面的exp1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 后顾：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(?&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;=exp2)exp1&lt;/span&gt; 查找&lt;span class=&quot;attr&quot;&gt;exp2&lt;/span&gt;后面的&lt;span class=&quot;attr&quot;&gt;exp1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;xml&quot;&gt;// 负前瞻：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;xml&quot;&gt;exp1(?!exp2) 查找后面不是exp2的exp1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;xml&quot;&gt;// 负后顾：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;xml&quot;&gt;(?&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;!exp2)exp1&lt;/span&gt; 查找前面不是&lt;span class=&quot;attr&quot;&gt;exp2&lt;/span&gt;的&lt;span class=&quot;attr&quot;&gt;exp1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;要理解?:则需要理解捕获分组和非捕获分组的概念：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;()表示捕获分组，()会把每个分组里的匹配的值保存起来，使用$n(n是一个数字，表示第n个捕获组的内容)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(?:)表示非捕获分组，和捕获分组唯一的区别在于，非捕获分组匹配的值不会保存起来&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="前端知识点总结" scheme="http://lanxiangc2.github.io/categories/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="正则表达式" scheme="http://lanxiangc2.github.io/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>前端知识点总结——CSS</title>
    <link href="http://lanxiangc2.github.io/2020/06/13/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93%E2%80%94%E2%80%94CSS/"/>
    <id>http://lanxiangc2.github.io/2020/06/13/前端知识点总结——CSS/</id>
    <published>2020-06-13T08:33:00.000Z</published>
    <updated>2020-06-18T08:33:32.843Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;CSS的盒模型-怎么切换&quot;&gt;&lt;a href=&quot;#CSS的盒模型-怎么切换&quot; class=&quot;headerlink&quot; title=&quot;CSS的盒模型 怎么切换&quot;&gt;&lt;/a&gt;CSS的盒模型 怎么切换&lt;/h3&gt;&lt;p&gt;&lt;code&gt;box-sizing:content-box&lt;/code&gt;这是W3C盒模型， width = content&lt;/p&gt;
&lt;p&gt;&lt;code&gt;box-sizing:border-box&lt;/code&gt;这是width = border + padding + content&lt;/p&gt;
    
    </summary>
    
      <category term="前端知识点总结" scheme="http://lanxiangc2.github.io/categories/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="CSS" scheme="http://lanxiangc2.github.io/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>前端知识点总结——HTML</title>
    <link href="http://lanxiangc2.github.io/2020/06/13/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93%E2%80%94%E2%80%94HTML/"/>
    <id>http://lanxiangc2.github.io/2020/06/13/前端知识点总结——HTML/</id>
    <published>2020-06-13T07:27:55.000Z</published>
    <updated>2020-06-13T14:26:27.317Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;canvas的一些方法&quot;&gt;&lt;a href=&quot;#canvas的一些方法&quot; class=&quot;headerlink&quot; title=&quot;canvas的一些方法&quot;&gt;&lt;/a&gt;canvas的一些方法&lt;/h3&gt;&lt;h3 id=&quot;requestAnimationFrame有用过吗？知道是干什么的吗？&quot;&gt;&lt;a href=&quot;#requestAnimationFrame有用过吗？知道是干什么的吗？&quot; class=&quot;headerlink&quot; title=&quot;requestAnimationFrame有用过吗？知道是干什么的吗？&quot;&gt;&lt;/a&gt;requestAnimationFrame有用过吗？知道是干什么的吗？&lt;/h3&gt;&lt;p&gt;&lt;u&gt;实现动画效果的方法比较多&lt;/u&gt;，Javascript 中可以通过定时器 setTimeout 来实现，css3 可以使用 transition 和 animation 来实现，html5 中的 canvas 也可以实现。除此之外，html5 还提供一个专门用于请求动画的API，那就是 requestAnimationFrame，顾名思义就是&lt;strong&gt;请求动画帧。&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="前端知识点总结" scheme="http://lanxiangc2.github.io/categories/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="HTML" scheme="http://lanxiangc2.github.io/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>前端知识点总结——前端工程化</title>
    <link href="http://lanxiangc2.github.io/2020/06/13/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93%E2%80%94%E2%80%94%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96/"/>
    <id>http://lanxiangc2.github.io/2020/06/13/前端知识点总结——前端工程化/</id>
    <published>2020-06-13T05:36:24.000Z</published>
    <updated>2020-06-15T08:43:02.770Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;loader的运行原理和作用&quot;&gt;&lt;a href=&quot;#loader的运行原理和作用&quot; class=&quot;headerlink&quot; title=&quot;loader的运行原理和作用&quot;&gt;&lt;/a&gt;loader的运行原理和作用&lt;/h3&gt;&lt;h4 id=&quot;具体作用如下：&quot;&gt;&lt;a href=&quot;#具体作用如下：&quot; class=&quot;headerlink&quot; title=&quot;具体作用如下：&quot;&gt;&lt;/a&gt;具体作用如下：&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;实现对不同格式文件的处理，比如将Scss转化为CSS，或将TypeScript转化为JavaScript。&lt;/li&gt;
&lt;li&gt;可以编译文件，从而使其能够添加到依赖关系中。loader是WebPack最重要的部分之一。通过使用不同的loader,我们能够调用外部的脚本或者工具，实现对不同格式文件的处理。loader需要在webpack.config.js文件里单独用module进行设置。&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="前端知识点总结" scheme="http://lanxiangc2.github.io/categories/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="前端工程化" scheme="http://lanxiangc2.github.io/tags/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>关于slice和concat深浅拷贝的问题</title>
    <link href="http://lanxiangc2.github.io/2020/06/12/%E5%85%B3%E4%BA%8Eslice%E5%92%8Cconcat%E6%B7%B1%E6%B5%85%E6%8B%B7%E8%B4%9D%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://lanxiangc2.github.io/2020/06/12/关于slice和concat深浅拷贝的问题/</id>
    <published>2020-06-12T05:50:44.000Z</published>
    <updated>2020-06-12T05:58:46.152Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h3 id=&quot;使用slice-进行深拷贝&quot;&gt;&lt;a href=&quot;#使用slice-进行深拷贝&quot; class=&quot;headerlink&quot; title=&quot;使用slice()进行深拷贝&quot;&gt;&lt;/a&gt;使用slice()进行深拷贝&lt;/h3&gt;&lt;figure class=&quot;highlight
        
      
    
    </summary>
    
      <category term="前端知识点总结" scheme="http://lanxiangc2.github.io/categories/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="JavaScript" scheme="http://lanxiangc2.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>前端知识点总结——ES6(2)</title>
    <link href="http://lanxiangc2.github.io/2020/06/11/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93%E2%80%94%E2%80%94ES6-2/"/>
    <id>http://lanxiangc2.github.io/2020/06/11/前端知识点总结——ES6-2/</id>
    <published>2020-06-11T01:53:59.000Z</published>
    <updated>2020-06-18T07:36:30.355Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h3 id=&quot;普通函数和箭头函数的区别-spades&quot;&gt;&lt;a href=&quot;#普通函数和箭头函数的区别-spades&quot; class=&quot;headerlink&quot; title=&quot;普通函数和箭头函数的区别    &amp;spades;&quot;&gt;&lt;/a&gt;普通函数和箭头函数的区别   
        
      
    
    </summary>
    
      <category term="前端知识点总结" scheme="http://lanxiangc2.github.io/categories/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="ES6" scheme="http://lanxiangc2.github.io/tags/ES6/"/>
    
  </entry>
  
  <entry>
    <title>什么是CI/CD</title>
    <link href="http://lanxiangc2.github.io/2020/06/10/%E4%BB%80%E4%B9%88%E6%98%AFCI-CD/"/>
    <id>http://lanxiangc2.github.io/2020/06/10/什么是CI-CD/</id>
    <published>2020-06-10T14:09:48.000Z</published>
    <updated>2020-06-10T14:11:03.729Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;参考博客：&lt;a href=&quot;https://www.jianshu.com/p/5643b1cf9e3f&quot; target=&quot;_blank&quot;
        
      
    
    </summary>
    
      <category term="运维" scheme="http://lanxiangc2.github.io/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="部署" scheme="http://lanxiangc2.github.io/tags/%E9%83%A8%E7%BD%B2/"/>
    
      <category term="运维" scheme="http://lanxiangc2.github.io/tags/%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>前端知识点总结——性能优化</title>
    <link href="http://lanxiangc2.github.io/2020/06/10/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93%E2%80%94%E2%80%94%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    <id>http://lanxiangc2.github.io/2020/06/10/前端知识点总结——性能优化/</id>
    <published>2020-06-10T13:48:26.000Z</published>
    <updated>2020-06-13T07:51:54.954Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;谈谈性能优化的问题&quot;&gt;&lt;a href=&quot;#谈谈性能优化的问题&quot; class=&quot;headerlink&quot; title=&quot;谈谈性能优化的问题&quot;&gt;&lt;/a&gt;谈谈性能优化的问题&lt;/h3&gt;&lt;h4 id=&quot;缓存利用&quot;&gt;&lt;a href=&quot;#缓存利用&quot; class=&quot;headerlink&quot; title=&quot;缓存利用&quot;&gt;&lt;/a&gt;缓存利用&lt;/h4&gt;&lt;p&gt;缓存Ajax，使用CDN、外部JavaScript和CSS文件缓存，添加Expires头，在服务器端配置Etag，减少DNS查找等&lt;/p&gt;
&lt;h4 id=&quot;请求数量&quot;&gt;&lt;a href=&quot;#请求数量&quot; class=&quot;headerlink&quot; title=&quot;请求数量&quot;&gt;&lt;/a&gt;请求数量&lt;/h4&gt;&lt;p&gt;合并样式和脚本，使用CSS图片精灵，初始首屏之外的图片资源按需加载，静态资源延迟加载&lt;/p&gt;
&lt;h4 id=&quot;请求带宽&quot;&gt;&lt;a href=&quot;#请求带宽&quot; class=&quot;headerlink&quot; title=&quot;请求带宽&quot;&gt;&lt;/a&gt;请求带宽&lt;/h4&gt;&lt;p&gt;压缩文件，开启GZIP&lt;/p&gt;
&lt;h4 id=&quot;JavaScript代码&quot;&gt;&lt;a href=&quot;#JavaScript代码&quot; class=&quot;headerlink&quot; title=&quot;JavaScript代码&quot;&gt;&lt;/a&gt;JavaScript代码&lt;/h4&gt;&lt;p&gt; 用散列表来代替优化查找，少用全局变量，用innerHTML代替DOM操作，减少DOM操作次数，优化JavaScript性能， 用setTimeout避免页面失去响应，缓存DOM节点查找结果，避免使用with（with会创建自己的作用域，增加作用域链的长度），多个变量声明合并&lt;/p&gt;
&lt;h4 id=&quot;HTML代码&quot;&gt;&lt;a href=&quot;#HTML代码&quot; class=&quot;headerlink&quot; title=&quot;HTML代码&quot;&gt;&lt;/a&gt;HTML代码&lt;/h4&gt;&lt;p&gt;避免图片和iFrame等src属性为空。src属性为空，会重新加载当前页面，影响速度和效率，尽量避免在HTML标签中写Style属性&lt;/p&gt;
    
    </summary>
    
      <category term="前端知识点总结" scheme="http://lanxiangc2.github.io/categories/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="性能优化" scheme="http://lanxiangc2.github.io/tags/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>前端知识点总结——操作系统</title>
    <link href="http://lanxiangc2.github.io/2020/06/10/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93%E2%80%94%E2%80%94%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    <id>http://lanxiangc2.github.io/2020/06/10/前端知识点总结——操作系统/</id>
    <published>2020-06-10T12:46:22.000Z</published>
    <updated>2020-06-22T08:11:03.294Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;进程和线程的区别&quot;&gt;&lt;a href=&quot;#进程和线程的区别&quot; class=&quot;headerlink&quot; title=&quot;进程和线程的区别&quot;&gt;&lt;/a&gt;进程和线程的区别&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;参考作者：&lt;a href=&quot;http://www.ruanyifeng.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;阮一峰&lt;/a&gt;，链接地址：&lt;a href=&quot;http://www.ruanyifeng.com/blog/2013/04/processes_and_threads.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://www.ruanyifeng.com/blog/2013/04/processes_and_threads.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;计算机的核心是CPU&lt;/strong&gt;，它承担了所有的计算任务。它就&lt;strong&gt;像一座工厂&lt;/strong&gt;，时刻在运行。&lt;/p&gt;
&lt;p&gt;假定工厂的电力有限，一次只能供给一个车间使用。也就是说，一个车间开工的时候，其他车间都必须停工。背后的含义就是，&lt;u&gt;单个CPU一次只能运行一个任务&lt;/u&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;进程就好比工厂的车间&lt;/strong&gt;，它代表CPU所能处理的单个任务。任一时刻，CPU总是运行一个进程，其他进程处于非运行状态。&lt;/p&gt;
&lt;p&gt;一个车间里，可以有很多工人。他们协同完成一个任务。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;线程就好比车间里的工人&lt;/strong&gt;。一个进程可以包括多个线程。&lt;/p&gt;
&lt;p&gt;&lt;u&gt;车间的空间是工人们共享的，比如许多房间是每个工人都可以进出的。这象征一个进程的内存空间是共享的，每个线程都可以使用这些共享内存。&lt;/u&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="前端知识点总结" scheme="http://lanxiangc2.github.io/categories/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="操作系统" scheme="http://lanxiangc2.github.io/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>前端知识点总结——算法与数据结构</title>
    <link href="http://lanxiangc2.github.io/2020/06/09/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93%E2%80%94%E2%80%94%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    <id>http://lanxiangc2.github.io/2020/06/09/前端知识点总结——算法与数据结构/</id>
    <published>2020-06-09T12:21:23.000Z</published>
    <updated>2020-06-18T08:21:32.859Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;排序算法了解哪些-spades&quot;&gt;&lt;a href=&quot;#排序算法了解哪些-spades&quot; class=&quot;headerlink&quot; title=&quot;排序算法了解哪些   &amp;spades;&quot;&gt;&lt;/a&gt;排序算法了解哪些   &amp;spades;&lt;/h3&gt;&lt;p&gt;冒泡排序&lt;/p&gt;
&lt;p&gt;插入排序&lt;/p&gt;
&lt;p&gt;选择排序&lt;/p&gt;
&lt;p&gt;快速排序&lt;/p&gt;
&lt;p&gt;归并排序&lt;/p&gt;
    
    </summary>
    
      <category term="前端知识点总结" scheme="http://lanxiangc2.github.io/categories/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="算法" scheme="http://lanxiangc2.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>前端知识点总结——JavaScript</title>
    <link href="http://lanxiangc2.github.io/2020/06/09/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93%E2%80%94%E2%80%94JavaScript/"/>
    <id>http://lanxiangc2.github.io/2020/06/09/前端知识点总结——JavaScript/</id>
    <published>2020-06-09T08:04:14.000Z</published>
    <updated>2020-06-18T12:06:32.886Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;apply-bind-call的区别&quot;&gt;&lt;a href=&quot;#apply-bind-call的区别&quot; class=&quot;headerlink&quot; title=&quot;apply bind call的区别&quot;&gt;&lt;/a&gt;apply bind call的区别&lt;/h3&gt;&lt;p&gt;&lt;code&gt;call 、bind 、 apply&lt;/code&gt; 这三个函数的第一个参数都是 this 的指向对象&lt;/p&gt;
&lt;p&gt;第二个参数差别来了&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;call的参数是直接放进去的，第二第三第n个参数全都用逗号分隔，直接放到后面  &lt;code&gt;obj.myFun.call(db,&amp;#39;成都&amp;#39;, ... ,&amp;#39;string&amp;#39; )；&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;apply的所有参数都必须放在一个数组里面传进去  &lt;code&gt;obj.myFun.apply(db,[&amp;#39;成都&amp;#39;, ..., &amp;#39;string&amp;#39; ]);&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;bind除了返回是函数以外，它 的参数和call 一样。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/2020/06/09/前端知识点总结——JavaScript/pic1.png&quot; alt=&quot;pic1&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;obj.myFun.call(db,&lt;span class=&quot;string&quot;&gt;&#39;成都&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;上海&#39;&lt;/span&gt;)；　　　　 &lt;span class=&quot;comment&quot;&gt;// 德玛 年龄 99  来自 成都去往上海&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;obj.myFun.apply(db,[&lt;span class=&quot;string&quot;&gt;&#39;成都&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;上海&#39;&lt;/span&gt;]);      &lt;span class=&quot;comment&quot;&gt;// 德玛 年龄 99  来自 成都去往上海  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;obj.myFun.bind(db,&lt;span class=&quot;string&quot;&gt;&#39;成都&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;上海&#39;&lt;/span&gt;)();       &lt;span class=&quot;comment&quot;&gt;// 德玛 年龄 99  来自 成都去往上海&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="前端知识点总结" scheme="http://lanxiangc2.github.io/categories/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="JavaScript" scheme="http://lanxiangc2.github.io/tags/JavaScript/"/>
    
      <category term="面经" scheme="http://lanxiangc2.github.io/tags/%E9%9D%A2%E7%BB%8F/"/>
    
  </entry>
  
  <entry>
    <title>前端知识点总结——ES6</title>
    <link href="http://lanxiangc2.github.io/2020/06/09/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93%E2%80%94%E2%80%94ES6/"/>
    <id>http://lanxiangc2.github.io/2020/06/09/前端知识点总结——ES6/</id>
    <published>2020-06-09T04:56:34.000Z</published>
    <updated>2020-06-18T07:29:56.417Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;对ES6有什么了解&quot;&gt;&lt;a href=&quot;#对ES6有什么了解&quot; class=&quot;headerlink&quot; title=&quot;对ES6有什么了解&quot;&gt;&lt;/a&gt;对ES6有什么了解&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;从以下几个方面去聊&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;let和const&quot;&gt;&lt;a href=&quot;#let和const&quot; class=&quot;headerlink&quot; title=&quot;let和const&quot;&gt;&lt;/a&gt;let和const&lt;/h4&gt;&lt;p&gt;var声明的变量会挂载在window上，而let和const声明的变量不会；&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(a,&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.a);    &lt;span class=&quot;comment&quot;&gt;// 100 100&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; b = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(b,&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.b);    &lt;span class=&quot;comment&quot;&gt;// 10 undefined&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; c = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(c,&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.c);    &lt;span class=&quot;comment&quot;&gt;// 1 undefined&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;var声明变量存在变量提升，let和const不存在变量提升；&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(a); &lt;span class=&quot;comment&quot;&gt;// undefined  ===&amp;gt;  a已声明还没赋值，默认得到undefined值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(b); &lt;span class=&quot;comment&quot;&gt;// 报错：b is not defined  ===&amp;gt; 找不到b这个变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; b = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(c); &lt;span class=&quot;comment&quot;&gt;// 报错：c is not defined  ===&amp;gt; 找不到c这个变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; c = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;let和const声明形成块作用域；    &lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; b = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(a); &lt;span class=&quot;comment&quot;&gt;// 100&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(b)  &lt;span class=&quot;comment&quot;&gt;// 报错：b is not defined  ===&amp;gt; 找不到b这个变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;同一作用域下let和const不能声明同名变量，而var可以；&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(a); &lt;span class=&quot;comment&quot;&gt;// 100&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(a); &lt;span class=&quot;comment&quot;&gt;// 10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  控制台报错：Identifier &#39;a&#39; has already been declared  ===&amp;gt; 标识符a已经被声明了。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;暂存死区&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&amp;#123;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//在当前块作用域中存在a使用let/const声明的情况下，给a赋值10时，只会在当前作用域找变量a， &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    a = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 而这时，还未到声明时候，所以控制台Error:a is not defined    &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;const&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1、一旦声明必须赋值,不能使用null占位。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2、声明后不能再修改&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3、如果声明的是复合类型数据，可以修改其属性&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;解构赋值&quot;&gt;&lt;a href=&quot;#解构赋值&quot; class=&quot;headerlink&quot; title=&quot;解构赋值&quot;&gt;&lt;/a&gt;解构赋值&lt;/h4&gt;&lt;h4 id=&quot;ES6拓展&quot;&gt;&lt;a href=&quot;#ES6拓展&quot; class=&quot;headerlink&quot; title=&quot;ES6拓展&quot;&gt;&lt;/a&gt;ES6拓展&lt;/h4&gt;&lt;h4 id=&quot;Promise&quot;&gt;&lt;a href=&quot;#Promise&quot; class=&quot;headerlink&quot; title=&quot;Promise&quot;&gt;&lt;/a&gt;Promise&lt;/h4&gt;&lt;h4 id=&quot;Class&quot;&gt;&lt;a href=&quot;#Class&quot; class=&quot;headerlink&quot; title=&quot;Class&quot;&gt;&lt;/a&gt;Class&lt;/h4&gt;
    
    </summary>
    
      <category term="前端知识点总结" scheme="http://lanxiangc2.github.io/categories/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="ES6" scheme="http://lanxiangc2.github.io/tags/ES6/"/>
    
  </entry>
  
  <entry>
    <title>前端知识点总结——网络</title>
    <link href="http://lanxiangc2.github.io/2020/06/09/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93%E2%80%94%E2%80%94%E7%BD%91%E7%BB%9C/"/>
    <id>http://lanxiangc2.github.io/2020/06/09/前端知识点总结——网络/</id>
    <published>2020-06-09T04:40:27.000Z</published>
    <updated>2020-06-18T12:25:10.420Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;对称加密和非对称加密&quot;&gt;&lt;a href=&quot;#对称加密和非对称加密&quot; class=&quot;headerlink&quot; title=&quot;对称加密和非对称加密&quot;&gt;&lt;/a&gt;对称加密和非对称加密&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;对称加密&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;对称加密指的就是加密和解密使用同一个秘钥，所以叫做对称加密。对称加密只有一个秘钥，作为私钥。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;非对称加密&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;非对称加密指的是：加密和解密使用不同的秘钥，一把作为公开的公钥，另一把作为私钥。公钥加密的信息，只有私钥才能解密。私钥加密的信息，只有公钥才能解密。（A、B两把钥匙是拥有一定数学关系的一组秘钥）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;区别&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;对称加密算法相比非对称加密算法来说，加解密的效率要高得多。但是缺陷在于对于秘钥的管理上，以及在非安全信道中通讯时，密钥交换的安全性不能保障。所以在实际的网络环境中，会将两者混合使用。&lt;/p&gt;
    
    </summary>
    
      <category term="前端知识点总结" scheme="http://lanxiangc2.github.io/categories/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="面经" scheme="http://lanxiangc2.github.io/tags/%E9%9D%A2%E7%BB%8F/"/>
    
      <category term="计算机网络" scheme="http://lanxiangc2.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>前端知识点总结——Vue</title>
    <link href="http://lanxiangc2.github.io/2020/06/09/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93%E2%80%94%E2%80%94Vue/"/>
    <id>http://lanxiangc2.github.io/2020/06/09/前端知识点总结——Vue/</id>
    <published>2020-06-09T02:53:53.000Z</published>
    <updated>2020-06-18T11:21:38.566Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;vue和react-spades&quot;&gt;&lt;a href=&quot;#vue和react-spades&quot; class=&quot;headerlink&quot; title=&quot;vue和react   &amp;spades;&quot;&gt;&lt;/a&gt;vue和react   &amp;spades;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;相似之处&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;Virtual-DOM&quot;&gt;&lt;a href=&quot;#Virtual-DOM&quot; class=&quot;headerlink&quot; title=&quot;Virtual DOM&quot;&gt;&lt;/a&gt;Virtual DOM&lt;/h4&gt;&lt;p&gt;Vue.js(2.0版本)与React的其中最大一个相似之处，就是他们都使用了一种叫’Virtual DOM’的东西。所谓的Virtual DOM基本上说就是它名字的意思：虚拟DOM，DOM树的虚拟表现。它的诞生是基于这么一个概念：改变真实的DOM状态远比改变一个JavaScript对象的花销要大得多。&lt;/p&gt;
&lt;p&gt;Virtual DOM是一个映射真实DOM的JavaScript对象，如果需要改变任何元素的状态，那么是先在Virtual DOM上进行改变，而不是直接改变真实的DOM。当有变化产生时，一个新的Virtual DOM对象会被创建并计算新旧Virtual DOM之间的差别。之后这些差别会应用在真实的DOM上。&lt;/p&gt;
    
    </summary>
    
      <category term="前端知识点总结" scheme="http://lanxiangc2.github.io/categories/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="前端框架" scheme="http://lanxiangc2.github.io/tags/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/"/>
    
      <category term="面经" scheme="http://lanxiangc2.github.io/tags/%E9%9D%A2%E7%BB%8F/"/>
    
  </entry>
  
  <entry>
    <title>前端知识点总结——nodes.js</title>
    <link href="http://lanxiangc2.github.io/2020/06/09/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93%E2%80%94%E2%80%94nodejs/"/>
    <id>http://lanxiangc2.github.io/2020/06/09/前端知识点总结——nodejs/</id>
    <published>2020-06-09T01:36:57.000Z</published>
    <updated>2020-06-10T14:20:57.022Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;koa洋葱圈运行机制&quot;&gt;&lt;a href=&quot;#koa洋葱圈运行机制&quot; class=&quot;headerlink&quot; title=&quot;koa洋葱圈运行机制&quot;&gt;&lt;/a&gt;koa洋葱圈运行机制&lt;/h3&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; Koa = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;koa&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; app = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Koa();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.use(&lt;span class=&quot;keyword&quot;&gt;async&lt;/span&gt; (ctx, next) =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;await&lt;/span&gt; next();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.use(&lt;span class=&quot;keyword&quot;&gt;async&lt;/span&gt; (ctx, next) =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;await&lt;/span&gt; next();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.use(&lt;span class=&quot;keyword&quot;&gt;async&lt;/span&gt; (ctx, next) =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ctx.body = &lt;span class=&quot;string&quot;&gt;&quot;hello world&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.listen(&lt;span class=&quot;number&quot;&gt;3000&lt;/span&gt;, () =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;listenning on 3000&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面的代码执行后会输出&lt;code&gt;123456&lt;/code&gt;，就像一个洋葱一样，从外层进去，然后碰到&lt;code&gt;next()&lt;/code&gt;就执行下一个中间件，执行完成后再返回回来。先假设我们已经实现了&lt;code&gt;next&lt;/code&gt;为下个中间件这段代码，上面的执行逻辑就很清楚了，先输出&lt;code&gt;1&lt;/code&gt;，然后进入下一个中间件，去处理&lt;code&gt;2&lt;/code&gt;，同理最后后面都处理完成后处理&lt;code&gt;5&lt;/code&gt;，&lt;code&gt;5&lt;/code&gt;处理完成后第二个中间件结束，然后第一个中间件再处理&lt;code&gt;6&lt;/code&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="前端知识点总结" scheme="http://lanxiangc2.github.io/categories/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="面经" scheme="http://lanxiangc2.github.io/tags/%E9%9D%A2%E7%BB%8F/"/>
    
      <category term="node.js框架" scheme="http://lanxiangc2.github.io/tags/node-js%E6%A1%86%E6%9E%B6/"/>
    
      <category term="后端" scheme="http://lanxiangc2.github.io/tags/%E5%90%8E%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>前端知识点总结——React</title>
    <link href="http://lanxiangc2.github.io/2020/06/08/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93%E2%80%94%E2%80%94React/"/>
    <id>http://lanxiangc2.github.io/2020/06/08/前端知识点总结——React/</id>
    <published>2020-06-08T12:41:59.000Z</published>
    <updated>2020-06-15T11:47:54.026Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h3 id=&quot;虚拟DOM-amp-amp-Diff算法&quot;&gt;&lt;a href=&quot;#虚拟DOM-amp-amp-Diff算法&quot; class=&quot;headerlink&quot; title=&quot;虚拟DOM &amp;amp;&amp;amp; Diff算法&quot;&gt;&lt;/a&gt;虚拟DOM &amp;amp;&amp;amp;
        
      
    
    </summary>
    
      <category term="前端知识点总结" scheme="http://lanxiangc2.github.io/categories/%E5%89%8D%E7%AB%AF%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="前端框架" scheme="http://lanxiangc2.github.io/tags/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/"/>
    
      <category term="面经" scheme="http://lanxiangc2.github.io/tags/%E9%9D%A2%E7%BB%8F/"/>
    
  </entry>
  
</feed>
